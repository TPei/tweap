class SeleniumTest(TestCase):
    browser = None

    def setUp(self):
        self.browser = webdriver.PhantomJS()
        self.email = '@usermanagement.de'
        self.password = 'datPassword'
        self.timeout = 2

    def register(self, username, email, password):
        self.browser.get('http://127.0.0.1:8000/users/register/')
        self.assertTrue('Tweap' in self.browser.title)

        elem = self.browser.find_element_by_name('username')
        elem.send_keys(username)

        elem = self.browser.find_element_by_name('email')
        elem.send_keys(email)

        elem = self.browser.find_element_by_name('password')
        elem.send_keys(password + Keys.RETURN)

    def login(self, username, password):
        self.browser.get('http://127.0.0.1:8000/users/login/')
        self.assertTrue('Tweap' in self.browser.title)

        elem = self.browser.find_element_by_name('username')
        elem.send_keys(username)

        elem = self.browser.find_element_by_name('password')
        elem.send_keys(password + Keys.RETURN)

    def logout(self):
        elem = WebDriverWait(self.browser, self.timeout).until(lambda x: x.find_element_by_name('navbar_logout_link'))
        elem.click()

    def delete_account(self):
        elem = WebDriverWait(self.browser, self.timeout).until(lambda x: x.find_element_by_name('navbar_profile_link'))
        elem.click()

        elem = WebDriverWait(self.browser, self.timeout).until(lambda x: x.find_element_by_name('make_changes'))
        elem.click()

        elem = WebDriverWait(self.browser, self.timeout).until(lambda x: x.find_element_by_name('delete_account'))
        elem.click()

        elem = WebDriverWait(self.browser, self.timeout).until(lambda x: x.find_element_by_name('confirm'))
        elem.click()

        elem = self.browser.find_element_by_name('delete_account')
        elem.click()

    ''' ----------------------------------------------------------------------------
    ------------------------ actual tests start here -------------------------------
    ---------------------------------------------------------------------------- '''
    def test_register(self):
        print('__UI_Test register__')
        username = 'testregister'
        self.register(username, username + self.email, self.password)
        elem = WebDriverWait(self.browser, 2).until(lambda x: x.find_element_by_name('navbar_profile_link'))
        self.assertIsNotNone(elem)
        self.logout()
        self.browser.get('http://127.0.0.1:8000/users/login/')
        self.assertTrue('Tweap' in self.browser.title)

        self.login(username, self.password)
        self.delete_account()
        self.browser.close()

    def test_delete_account(self):
        print('__UI_Test delete account__')
        username = 'testdeleteaccount'
        self.register(username, username + self.email, self.password)

        elem = WebDriverWait(self.browser, self.timeout).until(lambda x: x.find_element_by_name('navbar_profile_link'))
        elem.click()

        elem = WebDriverWait(self.browser, self.timeout).until(lambda x: x.find_element_by_name('make_changes'))
        elem.click()

        elem = WebDriverWait(self.browser, self.timeout).until(lambda x: x.find_element_by_name('delete_account'))
        elem.click()

        elem = WebDriverWait(self.browser, self.timeout).until(lambda x: x.find_element_by_name('confirm'))
        elem.click()

        elem = self.browser.find_element_by_name('delete_account')
        elem.click()
        self.browser.close()

    def test_edit_profile(self):
        print('__UI_Test edit profile__')
        username = 'testeditprofile'
        self.register(username, username + self.email, self.password)

        elem = WebDriverWait(self.browser, self.timeout).until(lambda x: x.find_element_by_name('navbar_profile_link'))
        elem.click()

        elem = WebDriverWait(self.browser, self.timeout).until(lambda x: x.find_element_by_name('make_changes'))
        elem.click()

        elem = WebDriverWait(self.browser, self.timeout).until(lambda x: x.find_element_by_name('street'))
        elem.send_keys('some street')

        elem = WebDriverWait(self.browser, self.timeout).until(lambda x: x.find_element_by_name('save_changes'))
        elem.click()

        self.delete_account()
        self.browser.close()
